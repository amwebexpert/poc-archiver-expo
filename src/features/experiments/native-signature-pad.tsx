import React, { useEffect, useRef, useState } from 'react';
import { StyleSheet, View } from 'react-native';
import { IconButton, Text } from 'react-native-paper';

import SignHere, { DrawingState, SignHereRef } from '@amwebexpert/react-native-sign-here';

const DATA = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 438 734"><desc>{serializerVersion: 1}</desc><path id="1754353352536" d="M 118.10826110839844 46.818824768066406 L 116.15699768066406 46.217262268066406 L 104.29352569580078 40.146949768066406 L 99.6577377319336 38.254093170166016 L 94.60862731933594 36.7585563659668 L 88.06919860839844 35.265625 L 80.88802337646484 34.248138427734375 L 74.21837615966797 33.95349884033203 L 56.626487731933594 35.93861770629883 L 48.08073043823242 38.66368865966797 L 45.079986572265625 40.67671203613281 L 41.277530670166016 46.14546203613281 L 40.25893020629883 49.08705520629883 L 39.53422546386719 52.99553680419922 L 39.619049072265625 55.94419479370117 L 40.90364456176758 59.04464340209961 L 43.41071319580078 61.7570686340332 L 46.421875 64.28571319580078 L 50.707218170166016 66.515625 L 60.77046203613281 70.70833587646484 L 75.24591064453125 74.98661041259766 L 89.98213958740234 80.71688842773438 L 97.58817291259766 84.60379791259766 L 104.25483703613281 88.59821319580078 L 115.98661041259766 99.15513610839844 L 120.4765625 104.9765625 L 124.58853912353516 111.05506134033203 L 127.69717407226562 117.48995208740234 L 129.33743286132812 123.70907592773438 L 130.0357208251953 130.18972778320312 L 128.7767791748047 136.0316162109375 L 123.48883819580078 146.08482360839844 L 119.55357360839844 150.63095092773438 L 115.54315185546875 153.7418212890625 L 109.63318634033203 156.8177032470703 L 103.93712615966797 159.0345916748047 L 97.81510162353516 159.73251342773438 L 91.55654907226562 159.61904907226562 L 85.02716064453125 158.7764129638672 L 78.58556365966797 156.18377685546875 L 73.67411041259766 153.1744842529297 L 69.58853912353516 150.10787963867188 L 66.56771087646484 145.1848907470703 L 65.02603912353516 140.51673889160156 L 63.95424270629883 130.02455139160156 L 64.8203125 122.58147430419922 L 66.08147430419922 119.52827453613281 L 67.65364837646484 117.8139877319336 L 70.0219497680664 115.93415069580078 L 73.10565185546875 114.49478912353516" stroke="blue" stroke-width="2" fill="none" />
<path id="1754353353395" d="M 164.81956481933594 123.3139877319336 L 164.57142639160156 125.56956481933594 L 164.57142639160156 151.62350463867188 L 164.99032592773438 155.42819213867188 L 164.95237731933594 159.49107360839844 L 165.77455139160156 167.21800231933594 L 166.53236389160156 170.51004028320312 L 166.4761962890625 173.20498657226562 L 166.9107208251953 174.6904754638672 L 167.2890625 174.90811157226562 L 167.23809814453125 174.43191528320312" stroke="blue" stroke-width="2" fill="none" />
<circle id="1754353353926" cx="164.95237731933594" cy="90.28571319580078" r="1" stroke="blue" stroke-width="0" fill="blue" />
<path id="1754353355319" d="M 169.10565185546875 105.3530502319336 L 172.54017639160156 104.83184814453125 L 176.29092407226562 104.76190185546875 L 180.3623504638672 103.9311752319336 L 182.2779083251953 103.1469497680664 L 183.7864532470703 102.30877685546875 L 186.46800231933594 100.05357360839844 L 187.11123657226562 96.88802337646484 L 186.6060333251953 94.93489837646484 L 181.8121337890625 88.8031997680664 L 179.45721435546875 87.3843002319336 L 176.9765625 86.4047622680664 L 172.28981018066406 86.0952377319336 L 165.7142791748047 89.9047622680664" stroke="blue" stroke-width="2" fill="none" />
<path id="1754353358221" d="M 254.13392639160156 156.3980712890625 L 247.3091583251953 153.2473907470703 L 242.68675231933594 152.63839721679688 L 232.35751342773438 153.96243286132812 L 228.06324768066406 155.61346435546875 L 220.05580139160156 160.83221435546875 L 217.04910278320312 163.46279907226562 L 211.82180786132812 169.69606018066406 L 209.33743286132812 176.9401092529297 L 209.5238037109375 179.78274536132812 L 210.38430786132812 183.30096435546875 L 212.06063842773438 186.85081481933594 L 213.92262268066406 189.24404907226562 L 216.67298889160156 191.9110870361328 L 220.81100463867188 194.27716064453125 L 225.8251495361328 196.07180786132812 L 230.26934814453125 196.6640625 L 234.6060333251953 196.57142639160156 L 238.79576110839844 195.51748657226562 L 247.11309814453125 190.34747314453125 L 251.12611389160156 187.05245971679688 L 254.5189666748047 183.1480712890625 L 261.29351806640625 173.99850463867188 L 262.9821472167969 170.79798889160156 L 262.8571472167969 168.61495971679688 L 262.42559814453125 168.76190185546875 L 261.6011962890625 170.6253662109375 L 260.108642578125 176.36868286132812 L 259.7552185058594 181.65847778320312 L 259.80950927734375 187.01376342773438 L 261.0412902832031 202.1216583251953 L 264.2172546386719 229.8173370361328 L 262.75335693359375 255.48214721679688 L 260.22320556640625 265.56732177734375 L 256.2566833496094 271.7433166503906 L 249.0308837890625 277.1577453613281 L 244.2425537109375 278.9665222167969 L 239.27529907226562 279.6190490722656 L 234.80245971679688 279.44830322265625 L 230.70498657226562 278.3307189941406 L 227.48623657226562 276.80877685546875 L 224.74591064453125 274.3262634277344 L 222.9267120361328 271.12091064453125 L 220.47283935546875 262.8768615722656 L 220.1216583251953 258.73883056640625 L 220.1904754638672 254.18154907226562 L 221.52529907226562 249.51748657226562 L 226.5811004638672 241.0598907470703 L 230.2105712890625 237.16294860839844 L 234.02566528320312 233.83407592773438 L 237.9014129638672 231.2213592529297 L 242.0751495361328 229.03274536132812 L 246.5126495361328 227.67037963867188 L 256.2734375 225.36012268066406 L 263.5803527832031 224.34300231933594 L 266.3504333496094 223.4918212890625 L 272.5212097167969 223.61904907226562 L 276.37164306640625 226.02566528320312 L 276.952392578125 227.86904907226562 L 277.3894958496094 227.8095245361328 L 277.3333435058594 228.2455291748047 L 289.428955078125 220.39993286132812 L 295.02642822265625 217.8199462890625 L 297.4847412109375 217.90475463867188 L 299.31585693359375 218.3392791748047 L 302.3299865722656 220.80618286132812 L 303.70648193359375 223.2503662109375 L 304.4192810058594 226.7064666748047 L 304.76190185546875 231.0267791748047 L 304.69232177734375 235.4654083251953 L 303.91070556640625 240.1558837890625 L 300.83966064453125 253.4029083251953 L 300.5364685058594 257.11346435546875 L 299.69195556640625 260.719482421875 L 299.3724060058594 263.250732421875 L 299.4285583496094 266.4988708496094 L 299.8541564941406 267.5625 L 300.68267822265625 267.8653259277344 L 301.8459777832031 267.3846740722656 L 306.2083435058594 262.93450927734375 L 309.41033935546875 260.1707458496094 L 315.352294921875 253.3716583251953 L 320.2641296386719 245.78720092773438 L 322.5855712890625 243.12908935546875 L 327.1019287109375 239.52120971679688 L 331.42596435546875 238.41331481933594 L 334.79351806640625 239.74591064453125 L 337.34375 244.5420379638672 L 339.1938171386719 251.96502685546875 L 339.4832458496094 257.0926208496094 L 341.8150939941406 272.60528564453125 L 344.15289306640625 284.953857421875 L 347.3359375 292.5610046386719 L 354.28570556640625 300.5714416503906" stroke="blue" stroke-width="2" fill="none" /></svg>`;

const NativeSignaturePadScreen: React.FC = () => {
  const signatureRef = useRef<SignHereRef>(null);
  const [signature, setSignature] = useState<DrawingState>({
    elements: [],
    undoHistory: [],
    isDrawGestureDirty: false,
  });

  const hasUndoHistory = signature.undoHistory.length > 0;
  const elementsCount = signature.elements.length;

  const [color, setColor] = useState('blue');
  const [size, setBrushSize] = useState(2);

  const handleColorChange = () => {
    setColor(color === 'blue' ? 'red' : 'blue');
  };

  useEffect(() => {
    signatureRef.current?.importSvg(DATA);
  }, []);

  const handleSave = async () => {
    const svgData = signatureRef.current?.exportSvg();
    console.log('Signature SVG xml:', svgData);
  };

  return (
    <View style={styles.container}>
      <View style={styles.controls}>
        <IconButton mode="outlined" icon="delete" onPress={() => signatureRef.current?.clear()} />
        <IconButton
          mode="outlined"
          icon="undo"
          disabled={!hasUndoHistory}
          onPress={() => signatureRef.current?.undo()}
        />
        <IconButton
          mode="outlined"
          icon="palette"
          style={{ backgroundColor: color }}
          onPress={handleColorChange}
          disabled={hasUndoHistory}
        />
        <IconButton
          mode="outlined"
          icon="pencil"
          onPress={() => setBrushSize(size === 2 ? 5 : 2)}
          disabled={hasUndoHistory}
        />
        <IconButton
          mode="outlined"
          icon="content-save"
          onPress={handleSave}
          disabled={!elementsCount}
        />
      </View>

      <View style={styles.signatureContainer}>
        <SignHere
          ref={signatureRef}
          strokeColor={color}
          strokeWidth={size}
          onChange={setSignature}
        />
      </View>

      <Text style={styles.info}>Elements: {elementsCount}</Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    gap: 8,
  },
  controls: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    alignItems: 'center',
  },
  signatureContainer: {
    flex: 1,
    borderWidth: 1,
    borderColor: 'gray',
  },
  info: {
    textAlign: 'center',
  },
});

export default NativeSignaturePadScreen;
